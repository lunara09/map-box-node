// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using assignment.Models;

namespace assignment.Migrations
{
    [DbContext(typeof(BeachContext))]
    partial class BeachContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("assignment.Models.BeachEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Accessible");

                    b.Property<string>("Address");

                    b.Property<string>("AddressFr");

                    b.Property<string>("BeachType");

                    b.Property<string>("CreatedDate");

                    b.Property<long>("GeometryId");

                    b.Property<string>("Link");

                    b.Property<string>("LinkDes1");

                    b.Property<string>("LinkDescr");

                    b.Property<string>("LinkFr");

                    b.Property<string>("LinkLab1");

                    b.Property<string>("LinkLabel");

                    b.Property<string>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("NameFr");

                    b.Property<string>("Notes");

                    b.Property<string>("Open");

                    b.Property<string>("Photo");

                    b.Property<string>("PostalCode");

                    b.HasKey("Id");

                    b.HasIndex("GeometryId");

                    b.ToTable("Beach");
                });

            modelBuilder.Entity("assignment.Models.CoordinatesEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("X");

                    b.Property<double>("Y");

                    b.HasKey("Id");

                    b.ToTable("Geometry");
                });

            modelBuilder.Entity("assignment.Models.BeachEf", b =>
                {
                    b.HasOne("assignment.Models.CoordinatesEf", "Geometry")
                        .WithMany()
                        .HasForeignKey("GeometryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
